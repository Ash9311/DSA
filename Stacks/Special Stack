//https://practice.geeksforgeeks.org/problems/special-stack/1
void push(stack<int>& s, int a){
	// Your code goes here
	s.push(a);
}

bool isFull(stack<int>& s,int n){
	// Your code goes here
	return s.size()==n;
}

bool isEmpty(stack<int>& s){
	// Your code goes here
	return s.size()==0;
}

int pop(stack<int>& s){
	// Your code goes here
	if(isEmpty(s)){
	    return -1;
	}
	int top = s.top();
	s.pop();
	return top;
}

void minimum(stack<int> &s,int &minn){
    if(s.empty()){
        return;
    }
    int top = s.top();
    s.pop();
    minn = min(minn,top);
    minimum(s,minn);
    s.push(top);
    
}

int getMin(stack<int>& s){
	// Your code goes here
	int minn = 100000;
	minimum(s,minn);
	return minn;
}
